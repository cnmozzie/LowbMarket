{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xC5490529483cA1C84Ad342562c7CC22132D64E32",
    "txHash": "0x63b5117215c94748f891dee278d840d4f98ef3e74046f4431b272a7e10ef9ed9"
  },
  "proxies": [
    {
      "address": "0x402ea44555074274Fa5Cfb573f13116b7cCB16CD",
      "txHash": "0xff825a7a3146137b9b925b51971407774aefcd614a1e77b8b82140b131aa64e4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b199aaaa16e1252da36025f684940f683d1470363b4e58ceebf40d711173769e": {
      "address": "0x41b60b562A9E0833503B60d9E954a9ca0026ad86",
      "txHash": "0x4347f1cf605a208969a6f9ee38032a556496bd46c2498244150f693f844b0dbf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "MyCollectible",
            "label": "serialIds",
            "type": "t_struct(Counter)1913_storage",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:12"
          },
          {
            "contract": "MyCollectible",
            "label": "_serialTokenStart",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:14"
          },
          {
            "contract": "MyCollectible",
            "label": "_serialGroupStart",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:15"
          },
          {
            "contract": "MyCollectible",
            "label": "serialTokenStart",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:16"
          },
          {
            "contract": "MyCollectible",
            "label": "serialGroupStart",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:17"
          },
          {
            "contract": "MyCollectible",
            "label": "serialMaxGroup",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:18"
          },
          {
            "contract": "MyCollectible",
            "label": "serialMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:19"
          },
          {
            "contract": "MyCollectible",
            "label": "serialCurrentGroup",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:20"
          },
          {
            "contract": "MyCollectible",
            "label": "serialCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:21"
          },
          {
            "contract": "MyCollectible",
            "label": "creatorOf",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:23"
          },
          {
            "contract": "MyCollectible",
            "label": "royaltyOf",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:24"
          },
          {
            "contract": "MyCollectible",
            "label": "serialOf",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:25"
          },
          {
            "contract": "MyCollectible",
            "label": "_groupURI",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:26"
          },
          {
            "contract": "MyCollectible",
            "label": "groupStart",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:27"
          },
          {
            "contract": "MyCollectible",
            "label": "groupCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:28"
          },
          {
            "contract": "MyCollectible",
            "label": "groupMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:29"
          },
          {
            "contract": "MyCollectible",
            "label": "groupOf",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\MyCollectible\\MyCollectible.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)1913_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
